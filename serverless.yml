service: wibsie-ml3

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  stackTags:
    GROUP: "wibsie"

  stage: prod
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:CreateBucket
        - s3:GetObject
      Resource: "*"
    - Effect: Allow
      Action:
        - sagemaker:*
      Resource: "*"
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource: "*"

  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    SERVICE: ${self:service}
    SAGE_BUCKET: ${self:service}-sagebucket-${opt:stage, self:provider.stage}
    SAGE_BUCKET_PREFIX: sagemaker
    SAGE_ROLE: "arn:aws:iam::530583866435:role/service-role/AmazonSageMaker-ExecutionRole-20180616T150039"
    FUNCTION_PREFIX: ${self:service}-${opt:stage, self:provider.stage}-

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  # - serverless-package-common

custom:
  pythonRequirements:
    invalidateCaches: true
    dockerizePip: non-linux
    #dockerizePip: true
    zip: true
    slim: true
    noDeploy:
      - boto3
      - botocore
      - tensorboard

  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: api.wibsie.com
    staging: staging-api.wibsie.com
    dev: dev-api.wibsie.com

  customDomain:
    basePath: "ml"
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: "${self:custom.stage}"
    createRoute53Record: true

package:
  individually: true

functions:
  train_model:
    handler: train_model.train_tf
    module: tf_funcs
    timeout: 300
    exclude:
      - '**/*'
    include:
      - '*.py'
      - 'tf_funcs/*.py'
      - 'numpy'
      - 'scipy'

  train_comp:
    handler: train_model.train_comp
    events:
      - s3:
        bucket: ${self:provider.environment.SAGE_BUCKET}
        event: s3:ObjectCreated:*
        rules:
          - suffix: model.tar.gz
    module: tf_funcs
    timeout: 300
    exclude:
      - '**/*'
    include:
      - '*.py'
      - tf_funcs/*.py

  infer_model:
    handler: infer_model.infer
    module: tf_funcs
    timeout: 300
    exclude:
      - '**/*'
    include:
      - '*.py'
      - 'tf_funcs/*.py'
      - 'numpy'
    events:
      - http:
          path: infer
          method: post
          cors: true
          authorizer:
            arn: arn:aws:lambda:us-east-1:530583866435:function:wibsieAuthorizer
            identitySource: method.request.header.AuthToken
            type: request

  upload_data:
    handler: upload_data.upload_data
    module: data_funcs
    timeout: 300
    exclude:
      - '**/*'
    include:
      - '*.py'
      - 'data_funcs/*.py'
      - 'numpy'
      - 'pandas'

# resources:
#   Resources:
#     SageBucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:provider.environment.SAGE_BUCKET}


#
